// <auto-generated />
using Demo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Demo.Migrations
{
    [DbContext(typeof(DemoContext))]
    partial class DemoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Demo.Models.ChargeStation", b =>
                {
                    b.Property<int>("ChargeStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ChargeStationId");

                    b.HasIndex("GroupId");

                    b.ToTable("ChargeStation");

                    b.HasData(
                        new
                        {
                            ChargeStationId = 1,
                            GroupId = 1,
                            Name = "ChargeStation1"
                        });
                });

            modelBuilder.Entity("Demo.Models.Connector", b =>
                {
                    b.Property<int>("ConnectorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChargeStationId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaxCurrent")
                        .HasColumnType("REAL");

                    b.HasKey("ConnectorId", "ChargeStationId");

                    b.HasIndex("ChargeStationId");

                    b.ToTable("Connector");

                    b.HasData(
                        new
                        {
                            ConnectorId = 1,
                            ChargeStationId = 1,
                            MaxCurrent = 5.0
                        });
                });

            modelBuilder.Entity("Demo.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Capacity")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Group");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 10.0,
                            Name = "Group1"
                        });
                });

            modelBuilder.Entity("Demo.Models.ChargeStation", b =>
                {
                    b.HasOne("Demo.Models.Group", "Group")
                        .WithMany("ChargeStations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Demo.Models.Connector", b =>
                {
                    b.HasOne("Demo.Models.ChargeStation", null)
                        .WithMany("Connectors")
                        .HasForeignKey("ChargeStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Demo.Models.ChargeStation", b =>
                {
                    b.Navigation("Connectors");
                });

            modelBuilder.Entity("Demo.Models.Group", b =>
                {
                    b.Navigation("ChargeStations");
                });
#pragma warning restore 612, 618
        }
    }
}
